/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 public/models/hill.glb 
*/
import * as THREE from "three";
import { GLTF } from "three-stdlib";
import { useRef } from "react";
import { useGLTF } from "@react-three/drei";

type GLTFResult = GLTF & {
  nodes: {
    Object_4: THREE.Mesh;
  };
  materials: {
    ["Material.001"]: THREE.MeshStandardMaterial;
  };
};

export function Hill(props: any) {
  const group = useRef();
  const { nodes, materials } = useGLTF(`/models/hill.glb`) as GLTFResult;
  return (
    <group
      ref={ group }
      name="hill"
      position={innerWidth < 600 ? [4.1, -4.2, 6.8] : [5.1, -3.6, 6.8]}
      rotation={[Math.PI * 0, 5.1, Math.PI * 0]}
      dispose={null}
      {...props}
    >
      <group name="Scene">
        <mesh
          //   ref={meshRef}
          name="Object_4"
          geometry={nodes.Object_4.geometry}
          material={materials["Material.001"]}
          material-transparent={true}
          material-opacity={1}
          rotation={[-Math.PI / 2, 0, 0]}
        />
      </group>
    </group>
  );
}

useGLTF.preload(`/models/hill.glb`);
